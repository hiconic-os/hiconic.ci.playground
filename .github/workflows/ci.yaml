name: Manual

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: pgazdik/devrock:1.0

    env:
      GITHUB_REPO_URL: ${{ github.event.repository.clone_url }}
      GITHUB_REPO_OWNER_AND_NAME: ${{ github.repository }}
      GITHUB_REPO_NAME: ${{ github.event.repository.name }}

      DEVROCK_REPOSITORY_CONFIGURATION: ${{ github.workspace }}/git-repo/repository-configuration-ci.yaml

      OPENTF_REPO_USER: ${{ secrets.OPENTF_REPO_USER }}
      OPENTF_REPO_PASSWORD: ${{ secrets.OPENTF_REPO_PASSWORD }}

      GIT_REPO: ${{ github.workspace }}/git-repo

      DEVROCK_PIPELINE_EXTERNAL_SEQUENCING: true

    defaults:
      run:
        working-directory: ${{ env.GIT_REPO }}

    steps:
      - name: Git Checkout
        working-directory: ${{ github.workspace }}
        run: |
          echo "${DEVROCK_REPOSITORY_CONFIGURATION}"
          mkdir inst
          mkdir repo
          git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git git-repo         

      # dr enrich-exchange-context - not found?
      - name: Analyze Codebase 
        run: |
          dr initialize-exchange
          dr analyze-codebase -Prange=.

      - name: Build Artifacts 
        run: dr build-artifacts

      - name: Check Linking 
        run: dr check-linking

      - name: Run Tests 
        run: dr run-tests

      # https://github.com/marketplace/actions/junit-report-action
      - name: Create Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: "**/dist/testReports/*.xml"
          annotate_only: true
          include_passed: false
          detailed_summary: true

      # https://github.com/marketplace/actions/test-reporter
      # doesn't work when triggered manually - HttpError: Resource not accessible by integration
      #- name: Test Report Dorny
      #  uses: dorny/test-reporter@v1
      #  if : always()    # run this step even if previous step failed
      #  with:
      #    name: Java Tests            # Name of the check run which will be created
      #    working-directory: 'git-repo'
      #    path: "**/dist/testReports/*.xml"    # Path to test results
      #    reporter: java-junit        # Format of test results

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"